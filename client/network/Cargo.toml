[package]
description = "Substrate network protocol"
name = "sc-network"
version = "0.8.1"
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
authors = ["Parity Technologies <admin@parity.io>"]
edition = "2018"
homepage = "https://substrate.dev"
repository = "https://github.com/paritytech/substrate/"
documentation = "https://docs.rs/sc-network"
readme = "README.md"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[build-dependencies]
prost-build = { version = "0.6.1", registry = "crates-io"}

[dependencies]
async-trait = { version = "0.1", registry = "crates-io" }
async-std = { version = "1.6.2", features = ["unstable"], registry = "crates-io" }
bitflags = { version = "1.2.0", registry = "crates-io" }
bs58 = { version = "0.3.1", registry = "crates-io" }
bytes = { version = "0.5.0", registry = "crates-io" }
codec = { package = "parity-scale-codec", version = "1.3.4", features = ["derive"], registry = "crates-io" }
derive_more = { version = "0.99.2", registry = "crates-io" }
either = { version = "1.5.3", registry = "crates-io" }
erased-serde = { version = "0.3.9", registry = "crates-io" }
fnv = { version = "1.0.6", registry = "crates-io" }
fork-tree = { version = "2.0.0", registry = "crates-io" }
futures = { version = "0.3.4", registry = "crates-io" }
futures-timer = { version = "3.0.2", registry = "crates-io" }
futures_codec = { version = "0.4.0", registry = "crates-io" }
hex = { version = "0.4.0", registry = "crates-io" }
ip_network = { version = "0.3.4", registry = "crates-io" }
linked-hash-map = { version = "0.5.2", registry = "crates-io" }
linked_hash_set = { version = "0.1.3", registry = "crates-io" }
log = { version = "0.4.8", registry = "crates-io" }
lru = { version = "0.4.0", registry = "crates-io" }
nohash-hasher = { version = "0.2.0", registry = "crates-io" }
parking_lot = { version = "0.10.0", registry = "crates-io" }
pin-project = { version = "0.4.6", registry = "crates-io" }
prometheus-endpoint = { package = "substrate-prometheus-endpoint", version = "0.8.0", registry = "crates-io" }
prost = { version = "0.6.1", registry = "crates-io" }
rand = { version = "0.7.2", registry = "crates-io" }
sc-block-builder = { version = "0.8.0", registry = "crates-io" }
sc-client-api = { version = "2.0.0", registry = "crates-io" }
sc-peerset = { version = "2.0.0", registry = "crates-io" }
serde = { version = "1.0.101", features = ["derive"], registry = "crates-io" }
serde_json = { version = "1.0.41", registry = "crates-io" }
slog = { version = "2.5.2", features = ["nested-values"], registry = "crates-io" }
slog_derive ={ version = "0.2.0", registry = "crates-io" }
smallvec = { version = "0.6.10", registry = "crates-io" }
sp-arithmetic = { version = "2.0.0", registry = "crates-io" }
sp-blockchain = { version = "2.0.0", registry = "crates-io" }
sp-consensus = { version = "0.8.0", registry = "crates-io" }
sp-core = { version = "2.0.0", registry = "crates-io" }
sp-runtime = { version = "2.0.0", registry = "crates-io" }
sp-utils = { version = "2.0.0", registry = "crates-io" }
thiserror = { version = "1", registry = "crates-io" }
unsigned-varint = { version = "0.4.0", features = ["futures", "futures-codec"], registry = "crates-io" }
void = { version = "1.0.2", registry = "crates-io" }
wasm-timer = { version = "0.2", registry = "crates-io" }
zeroize = { version = "1.0.0", registry = "crates-io" }

[dependencies.libp2p]
version = "0.28.1"
default-features = false
features = ["identify", "kad", "mdns-async-std", "mplex", "noise", "ping", "request-response", "tcp-async-std", "websocket", "yamux"]
registry = "crates-io"

[dev-dependencies]
assert_matches = { version = "1.3", registry = "crates-io" }
libp2p = { version = "0.28.1", default-features = false, registry = "crates-io" }
quickcheck = { version = "0.9.0", registry = "crates-io" }
rand = { version = "0.7.2", registry = "crates-io" }
sp-keyring = { version = "2.0.0", registry = "crates-io" }
#sp-test-primitives = { version = "2.0.0" }
sp-tracing = { version = "2.0.0", registry = "crates-io" }
# substrate-test-runtime = { version = "2.0.0" }
# substrate-test-runtime-client = { version = "2.0.0" }
tempfile = { version = "3.1.0", registry = "crates-io" }

[features]
default = []
